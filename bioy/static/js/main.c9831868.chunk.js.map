{"version":3,"sources":["utils.js","data/store.js","authors/actions.js","authors/Authors.js","authors/reducer.js","authors/index.js","data/query.js","feed/actions.js","papers/actions.js","papers/Papers.js","papers/index.js","feed/Feed.js","feed/reducer.js","feed/index.js","feed/container.js","followees/Followees.js","followees/container.js","followees/index.js","readings/Readings.js","readings/container.js","readings/reducer.js","readings/index.js","search/actions.js","search/Search.js","search/container.js","search/reducer.js","search/index.js","App.js","serviceWorker.js","index.js"],"names":["getLocalStorage","property","serializedState","localStorage","getItem","JSON","parse","err","console","log","setLocalStorage","value","stringify","setItem","hashString","str","hash","length","i","charCodeAt","setLocalCache","key","processAtomFeed","atomFeed","followedAuthors","papers","paper","author","category","push","title","summary","guid","authors","Array","isArray","map","a","name","isFollowed","includes","categories","c","rLog","reducerName","state","action","toUpperCase","type","Store","reducer","initState","instance","this","consumers","Object","assign","deepFreeze","o","freeze","getOwnPropertyNames","forEach","prop","hasOwnProperty","isFrozen","consumer","concat","act","dispatch","reducedSlices","entries","reduced","_dispatch","FOLLOW_AUTHOR","UNFOLLOW_AUTHOR","follow","unFollow","AuthorList","styled","ul","Author","li","FollowAuthor","button","props","animate","UnFollowAuthor","Authors","isFetching","onClick","store","actions","components","filter","NAME","baseURL","arxiv_categories","getFeed","urlfeed","callback","req","request","feedparser","FeedParser","feedItems","on","response","statusCode","pipe","message","item","read","undefined","fetchAtomFeed","args","Promise","resolve","reject","authorQuery","names","split","join","RECEIVE_FEED","REQUEST_FEED","requestFeed","arxivQuery","receiveFeed","fetchFeed","then","error","ADD_PAPER","add","PaperList","PaperEntry","div","PaperTitle","h3","PaperSummary","p","AddToReadList","Paper","Papers","items","className","PapersContainer","FeedTitle","FeedEmptyMsg","feed","lastUpdated","receivedAt","feed_","FeedContainer","subscribe","setState","getState","Feed","React","PureComponent","unFollowAuthor","FollowedAuthorsList","FollowedAuthor","FollowedAuthorsTitle","NoFolloweesMsg","FollowedAuthorsContainer","section","followees","FolloweesContainer","prevProps","prevState","_queryByFollowers","max_results","any_category","any_author","search_query","pagination","query","getQueryURL","cachedFeed","Followees","ReadingList","ReadingListEntry","ReadingListTitle","ReadingListEmptyMsg","ReadingListContainer","readings","ReadingsContainer","Readings","some","RECEIVE_PAPERS","REQUEST_PAPERS","requestPapers","receivePapers","fetchPapers","SearchInput","_onChange","e","target","_handleKeyDown","term","htmlFor","onChange","onKeyDown","id","placeholder","Component","results","SearchContainer","searchResults","updateHeight","Search","searchResults_","stateSchema","Date","now","papersPerAuthor","search","App","swSty","padding","minHeight","color","WebkitOverflowScrolling","background","borderRight","backgroundColor","theme","disableLazyLoading","enableMouseEvents","animateHeight","swipeableActions","style","overflowY","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9831868.chunk.js","sourcesContent":["/*\n * Some utils for freezing objects, logging and working with the\n * localStorage.\n */\n\nexport const getLocalStorage = (property = \"state\") => {\n  try {\n    const serializedState = localStorage.getItem(property);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.log(\"localStorage.get complains: \", err);\n    return undefined;\n  }\n};\n\nexport const setLocalStorage = (property, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(property, serializedState);\n  } catch (err) {\n    console.log(\"localStorage.set complains: \", err);\n  }\n};\n\nfunction hashString(str) {\n  let hash = 0;\n  if (str.length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nexport const setLocalCache = (key, value) => {\n  setLocalStorage(hashString(key), value);\n};\n\nexport const getLocalCache = key => {\n  return getLocalStorage(hashString(key));\n};\n\n/**\n * Flattens an Atom feed of papers into a simpler data structure.\n * Eg.: paper[\"atom:author\"][*].name[\"#\"] -> paper.authors\n *\n * @param {Array} atomFeed (Atom feed)\n */\nexport const processAtomFeed = (atomFeed, followedAuthors) => {\n  let papers = [];\n  for (const paper of atomFeed) {\n    const author = paper[\"atom:author\"];\n    const category = paper[\"atom:category\"];\n    papers.push({\n      title: paper.title,\n      summary: paper.summary,\n      guid: paper.guid,\n      authors: Array.isArray(author)\n        ? author.map(a => ({\n            name: a[\"name\"][\"#\"],\n            isFollowed: followedAuthors.includes(a[\"name\"][\"#\"])\n          }))\n        : [\n            {\n              name: author[\"name\"][\"#\"],\n              isFollowed: followedAuthors.includes(author[\"name\"][\"#\"])\n            }\n          ],\n      categories: Array.isArray(category)\n        ? category.map(c => c[\"@\"][\"term\"])\n        : [category[\"@\"][\"term\"]]\n    });\n  }\n  return papers;\n};\n\n/**\n * Make an object immutable.\n * @param {Object} o\n */\nexport const deepFreeze = o => {\n  Object.freeze(o);\n\n  Object.getOwnPropertyNames(o).forEach(function(prop) {\n    if (\n      o.hasOwnProperty(prop) &&\n      o[prop] !== null &&\n      (typeof o[prop] === \"object\" || typeof o[prop] === \"function\") &&\n      !Object.isFrozen(o[prop])\n    ) {\n      deepFreeze(o[prop]);\n    }\n  });\n\n  return o;\n};\n\nexport const rLog = (reducerName, state, action) => {\n  console.log(`${reducerName.toUpperCase()} REDUCER: `);\n  console.log(\"  type: \", action.type);\n  console.log(\"  state: \", state);\n  console.log(\"  action: \", action);\n};\n","//@ts-check\nimport { deepFreeze } from \"../utils\";\n\nclass Store {\n  static instance;\n  constructor(reducer, initState) {\n    if (Store.instance) {\n      console.log(\"Warning, Store is a singleton!\");\n      return Store.instance;\n    }\n    this.reducer = reducer;\n    this.consumers = [];\n\n    if (initState) {\n      this.state = Object.assign({}, initState);\n    }\n\n    // kind of a singleton\n    this.instance = this;\n  }\n\n  /**\n   * Return an immutable copy of the current this.state.\n   *\n   * @returns Immutable Object.\n   * @memberof Store\n   */\n  getState() {\n    return deepFreeze(Object.assign({}, this.state));\n  }\n\n  subscribe(consumer) {\n    this.consumers = this.consumers.concat(consumer);\n  }\n\n  _dispatch() {\n    for (var consumer of this.consumers) {\n      consumer();\n    }\n  }\n\n  dispatch(action) {\n    if (typeof action === \"function\") {\n      // you can see this as redux-thunk\n      action(act => this.dispatch(act));\n    } else {\n      // {\"state.fieldA\": newValues, \"state.fieldB\": newValues, ...}\n      const reducedSlices = this.reducer(this.state, action);\n\n      // update the state based on the keys of reducedSlices, but only\n      // if there are any differences.\n      if (this.state) {\n        Object.entries(reducedSlices).forEach(([reducer, reduced]) => {\n          if (JSON.stringify(reduced) !== JSON.stringify(this.state[reducer])) {\n            Object.assign(this.state, { [reducer]: reduced });\n          }\n        });\n      } else {\n        this.state = {};\n        Object.entries(reducedSlices).forEach(([reducer, reduced]) => {\n          Object.assign(this.state, { [reducer]: reduced });\n        });\n      }\n    }\n\n    // Call all consumers? Hmm...\n    this._dispatch();\n  }\n}\n\nexport default Store;\n","export const FOLLOW_AUTHOR = \"FOLLOW_AUTHOR\";\nexport const UNFOLLOW_AUTHOR = \"UNFOLLOW_AUTHOR\";\n\nexport function follow(author) {\n  return { type: FOLLOW_AUTHOR, author };\n}\n\nexport function unFollow(author) {\n  return { type: UNFOLLOW_AUTHOR, author };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { store } from \"../App\";\nimport * as actions from \"./actions\";\n\nconst AuthorList = styled.ul`\n  font-size: 14px;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nconst Author = styled.li`\n  display: inline-block;\n  margin-right: 20px;\n  margin-bottom: 3px;\n  // color: grey;\n`;\n\nconst FollowAuthor = styled.button`\n  margin-left: 5px;\n  font-weight: bold;\n  background-color: transparent;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 50%;\n  padding: 0 4px;\n  font-family: \"Lucida Console\", Monaco, monospace;\n  border-color: ${props => (props.animate ? \"green\" : \"#000\")};\n  color: ${props => (props.animate ? \"green\" : \"#000\")};\n`;\n\nconst UnFollowAuthor = styled.button`\n  margin-left: 5px;\n  font-weight: bold;\n  background-color: transparent;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 50%;\n  border-color: crimson;\n  color: crimson;\n  padding: 0 4px;\n  font-family: \"Lucida Console\", Monaco, monospace;\n  transform: rotate(45deg);\n`;\n\nexport const Authors = ({ authors, isFetching }) => {\n  return (\n    <AuthorList>\n      {authors.map(author => (\n        <Author key={author.name}>\n          {author.name}\n          {author.isFollowed ? (\n            <UnFollowAuthor\n              onClick={() => store.dispatch(actions.unFollow(author.name))}\n            >\n              {\"+\"}\n            </UnFollowAuthor>\n          ) : (\n            <FollowAuthor\n              onClick={() => store.dispatch(actions.follow(author.name))}\n              animate={isFetching}\n            >\n              {\"+\"}\n            </FollowAuthor>\n          )}\n        </Author>\n      ))}\n    </AuthorList>\n  );\n};\n","import * as actions from \"./actions\";\n\nimport { rLog } from \"../utils\";\n\n//\n\nfunction authors(state = [], action) {\n  rLog(\"authors\", state, action);\n  switch (action.type) {\n    case actions.FOLLOW_AUTHOR:\n      if (state.includes(action.author)) {\n        return state;\n      }\n      return state.concat(action.author);\n    case actions.UNFOLLOW_AUTHOR:\n      return state.filter(author => author !== action.author);\n    default:\n      return state;\n  }\n}\n\nexport default authors;\n","import * as components from \"./Authors\";\nimport * as actions from \"./actions\";\nimport reducer from \"./reducer\";\n\nconst NAME = \"authors\";\n\nexport default { actions, components, reducer, NAME };\n","import FeedParser from \"feedparser\";\nimport request from \"request\";\n\nconst baseURL = \"https://export.arxiv.org/api/query?\";\nconst arxiv_categories = [\"cs.AI\", \"cs.CV\", \"cs.LG\", \"cs.NE\", \"stat.ML\"];\n\nfunction getFeed(urlfeed, callback) {\n  var req = request(urlfeed);\n  var feedparser = new FeedParser();\n  var feedItems = [];\n  req.on(\"response\", function(response) {\n    var stream = this;\n    if (response.statusCode === 200) {\n      stream.pipe(feedparser);\n    }\n  });\n  req.on(\"error\", function(err) {\n    console.log(\"getFeed: err.message == \" + err.message);\n  });\n  feedparser.on(\"readable\", function() {\n    try {\n      var item = this.read();\n      if (item !== null) {\n        //2/9/17 by DW\n        feedItems.push(item);\n      }\n    } catch (err) {\n      console.log(\"getFeed: err.message == \" + err.message);\n    }\n  });\n  feedparser.on(\"end\", function() {\n    callback(undefined, feedItems);\n  });\n  feedparser.on(\"error\", function(err) {\n    console.log(\"getFeed: err.message == \" + err.message);\n    callback(err);\n  });\n}\n\nconst fetchAtomFeed = (...args) => {\n  return new Promise((resolve, reject) => {\n    getFeed(...args, (err, atomFeed) => {\n      if (err) return reject(err);\n      return resolve(atomFeed);\n    });\n  });\n};\n\nfunction authorQuery(author) {\n  /**\n   * Receives an author's name and returns a slug necessary to properly\n   * query the arXiv API.\n   *\n   * Examples:\n   *  \"Jascha Sohl-Dickstein\" -> \"(au:Jascha+AND+au:Sohl_Dickstein)\"\n   *  \"Yee Whye Teh\" -> \"(au:Yee+AND+au:Whye+AND+au:Teh)\"\n   *\n   * @param {string} author (A string such as \"Jascha Sohl-Dickstein\")\n   * @returns {string}\n   */\n  const names = author.split(\" \").map(name => name.split(\"-\").join(\"_\"));\n  return `%28${names.map(name => `au:${name}`).join(\"+AND+\")}%29`;\n}\n\nfunction getQueryURL(authors, max_results) {\n  /**\n   * Receives a list of authors and builds a query using logic operators\n   * according to https://arxiv.org/help/api/user-manual#query_details\n   *\n   * Specifically it builds something like:\n   * (cs.AI OR cs.CV OR ...) AND (authorQuery OR authorQuery OR authorQuery ...)\n   *\n   * @param {Array} authors An array of author names for which we want to query\n   * for their latest papers.\n   * @returns\n   */\n\n  const any_category = `%28cat:${arxiv_categories.join(\"+OR+\")}%29`;\n  const any_author = `%28${authors.map(authorQuery).join(\"+OR+\")}%29`;\n  const search_query = `search_query=${any_category}+AND+${any_author}`;\n\n  const pagination = `&start=0&max_results=${max_results}`;\n  const sorting = \"&sortBy=submittedDate\";\n\n  // finaly build the actual query\n  const query = `${baseURL}${search_query}${pagination}${sorting}`;\n\n  console.log(`SEARCH QUERY: ${search_query}`);\n  console.log(`FULL QUERY  : ${query}`);\n  return query;\n}\n\nexport { fetchAtomFeed, getQueryURL };\n","import { fetchAtomFeed } from \"../data/query\";\n//\n\nexport const RECEIVE_FEED = \"RECEIVE_FEED\";\nexport const REQUEST_FEED = \"REQUEST_FEED\";\n\n// sync action creators that will work with async action creators\n\nexport function requestFeed(arxivQuery, followedAuthors) {\n  return {\n    type: REQUEST_FEED,\n    arxivQuery,\n    followedAuthors\n  };\n}\n\nexport function receiveFeed(arxivQuery, followedAuthors, atomFeed) {\n  return {\n    type: RECEIVE_FEED,\n    arxivQuery,\n    followedAuthors,\n    atomFeed: atomFeed\n  };\n}\n\n// A thunk action creator, I guess?\n\nexport function fetchFeed(arxivQuery, followedAuthors) {\n  return function(dispatch) {\n    // update app state with the request status\n    dispatch(requestFeed(arxivQuery, followedAuthors));\n\n    return fetchAtomFeed(arxivQuery)\n      .then(\n        response => response,\n        error => console.log(\"Oh shit, \", error)\n      )\n      .then(response =>\n        dispatch(receiveFeed(arxivQuery, followedAuthors, response))\n      );\n  };\n}\n","export const ADD_PAPER = \"ADD_PAPER\";\n\n// action creators\n\nexport function add(paper) {\n  return { type: ADD_PAPER, paper };\n}\n","import * as actions from \"./actions\";\n\nimport Latex from \"react-latex\";\nimport React from \"react\";\nimport authors from \"../authors\";\nimport { store } from \"../App\";\nimport styled from \"styled-components\";\n\n//\n\nconst { Authors } = authors.components;\n\nconst PaperList = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nconst PaperEntry = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst PaperTitle = styled.h3``;\n\nconst PaperSummary = styled.p`\n  overflow-wrap: break-word;\n`;\n\nconst AddToReadList = styled.button`\n  margin: 0 5px 0 0;\n  font-weight: bold;\n  background-color: transparent;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 25%;\n  border-color: #000;\n  padding: 0 4px;\n  font-family: \"Lucida Console\", Monaco, monospace;\n`;\n\nconst Paper = paper => {\n  return (\n    <PaperEntry>\n      <PaperTitle>\n        <AddToReadList onClick={() => store.dispatch(actions.add(paper))}>\n          {\"+\"}\n        </AddToReadList>\n        {paper.title}\n      </PaperTitle>\n      <Authors authors={paper.authors} isFetching={paper.isFetching} />\n      <PaperSummary>\n        <Latex>{paper.summary}</Latex>\n      </PaperSummary>\n    </PaperEntry>\n  );\n};\n\nexport default ({ papers }) => {\n  return (\n    <section>\n      <PaperList>\n        {papers.items.map(paper => (\n          <li key={paper.guid} className=\"Paper\">\n            <Paper\n              title={paper.title}\n              authors={paper.authors}\n              summary={paper.summary}\n              guid={paper.guid}\n              isFetching={papers.isFetching}\n            />\n          </li>\n        ))}\n      </PaperList>\n    </section>\n  );\n};\n","import Papers from \"./Papers\";\nimport PapersContainer from \"./container\";\nimport * as actions from \"./actions\";\nimport reducer from \"./reducer\";\n\nconst NAME = \"papers\";\nconst components = { Papers, PapersContainer };\n\nexport default { NAME, actions, reducer, components };\n","import React from \"react\";\nimport papers from \"../papers\";\nimport styled from \"styled-components\";\n\n//\n\nconst { Papers } = papers.components;\n\nconst FeedTitle = styled.h3``;\n\nconst FeedEmptyMsg = styled.p`\n  font-style: italic;\n  color: #dfd5ff;\n`;\n\nexport default ({ feed }) => {\n  return (\n    <section>\n      <FeedTitle>\n        Papers by authors you follow:\n      </FeedTitle>\n      {feed.items.length === 0 && (\n        <FeedEmptyMsg>\n          Your feed is empty!\n          <br/><br/>Just one more swipe right to the search view :).\n        </FeedEmptyMsg>\n      )}\n      <Papers papers={feed} />\n    </section>\n  );\n};\n","import * as actions from \"./actions\";\n\nimport { processAtomFeed, rLog } from \"../utils\";\n//\n\n/*\n * Define some sync reducers that work with async action creators\n */\nfunction feed_(state = { isFetching: false, items: [] }, action) {\n  rLog(\"papers_\", state, action);\n  switch (action.type) {\n    case actions.REQUEST_FEED:\n      return Object.assign({}, state, {\n        arxivQuery: action.arxivQuery,\n        isFetching: true\n      });\n    case actions.RECEIVE_FEED:\n      return Object.assign({}, state, {\n        isFetching: false,\n        arxivQuery: action.arxivQuery,\n        items: processAtomFeed(action.atomFeed, action.followedAuthors),\n        atomFeed: action.atomFeed,\n        lastUpdated: action.receivedAt\n      });\n    default:\n      return state;\n  }\n}\n\nfunction feed(state = {}, action) {\n  rLog(\"papers\", state, action);\n  switch (action.type) {\n    case actions.REQUEST_FEED:\n    case actions.RECEIVE_FEED:\n      return Object.assign({}, state, feed_(state, action));\n    default:\n      return state;\n  }\n}\n\nexport default feed;\n","import * as actions from \"./actions\";\n\nimport FeedContainer from \"./container\";\nimport reducer from \"./reducer\";\n\nconst NAME = \"feed\";\nconst components = { FeedContainer };\n\nexport default { NAME, actions, reducer, components };\n","import Feed from \"./Feed\";\nimport React from \"react\";\nimport { store } from \"../App\";\n\n//\n\nclass FeedContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { isFetching: false, items: [], atomFeed: [] };\n    store.subscribe(() => this.setState(store.getState().feed));\n  }\n\n  componentDidMount() {\n    this.setState(store.getState().feed);\n  }\n\n  render() {\n    return <Feed feed={this.state} />;\n  }\n}\n\nexport default FeedContainer;\n","import React from \"react\";\nimport authors from \"../authors\";\nimport { store } from \"../App\";\nimport styled from \"styled-components\";\n\n//\n\nconst unFollowAuthor = authors.actions.unFollow;\n\nconst FollowedAuthorsList = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nconst FollowedAuthor = styled.li`\n  margin: 5px 0;\n`;\nconst FollowedAuthorsTitle = styled.h3``;\n\nconst UnFollowAuthor = styled.button`\n  margin-left: 5px;\n  font-weight: bold;\n  background-color: transparent;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 50%;\n  border-color: crimson;\n  color: crimson;\n  padding: 0 4px;\n  font-family: \"Lucida Console\", Monaco, monospace;\n  transform: rotate(45deg);\n  float: right;\n`;\n\nconst NoFolloweesMsg = styled.p`\n  font-style: italic;\n  color: #f3fed6;\n`;\n\nconst FollowedAuthorsContainer = styled.section``;\n\nexport default ({ followees }) => {\n  return (\n    <FollowedAuthorsContainer>\n      <FollowedAuthorsTitle>{\"You are following: \"}</FollowedAuthorsTitle>\n      {followees.length === 0 && (\n        <NoFolloweesMsg>\n          You are not following anyone, swipe right to the search view and start\n          following researchers.\n        </NoFolloweesMsg>\n      )}\n      <FollowedAuthorsList>\n        {followees.map(author => (\n          <FollowedAuthor key={author}>\n            {author}\n            <UnFollowAuthor\n              onClick={() => store.dispatch(unFollowAuthor(author))}\n            >\n              {\"+\"}\n            </UnFollowAuthor>\n          </FollowedAuthor>\n        ))}\n      </FollowedAuthorsList>\n    </FollowedAuthorsContainer>\n  );\n};\n","import { getLocalCache, setLocalCache } from \"../utils\";\n\nimport Followees from \"./Followees\";\nimport React from \"react\";\nimport feed from \"../feed\";\nimport { getQueryURL } from \"../data/query\";\nimport { store } from \"../App\";\n\n//\n\nconst { fetchFeed, receiveFeed } = feed.actions;\n\nclass FolloweesContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { followees: [] };\n\n    // subscribers\n    store.subscribe(() =>\n      this.setState({ followees: store.getState().followees })\n    );\n    // localStorage subscriber\n    store.subscribe(() => {\n      const { arxivQuery, atomFeed } = store.getState().feed;\n      if (arxivQuery) {\n        setLocalCache(arxivQuery, atomFeed);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.setState({ followees: store.getState().followees });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.followees.length !== this.state.followees.length) {\n      this._queryByFollowers();\n    }\n  }\n\n  _queryByFollowers() {\n    const arxivQuery = getQueryURL(\n      this.state.followees,\n      this.state.followees.length * 5\n    );\n\n    const cachedFeed = getLocalCache(arxivQuery);\n    if (cachedFeed) {\n      console.log(\"-------------- CACHE HIT! ------------------\")\n      store.dispatch(receiveFeed(arxivQuery, this.state.followees, cachedFeed));\n    } else {\n      console.log(\"-------------- API CALL! -------------------\")\n      store.dispatch(fetchFeed(arxivQuery, this.state.followees));\n    }\n  }\n\n  render() {\n    return <Followees followees={this.state.followees} />;\n  }\n}\n\nexport default FolloweesContainer;\n","import Followees from \"./Followees\";\nimport FolloweesContainer from \"./container\";\nimport * as actions from \"./actions\";\nimport reducer from \"./reducer\";\n\nconst NAME = \"followees\";\nconst components = { Followees, FolloweesContainer };\n\nexport default { NAME, actions, reducer, components };\n","import React from \"react\";\nimport styled from \"styled-components\";\n//\n\nconst ReadingList = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nconst ReadingListEntry = styled.li`\n  margin: 1px 0;\n  padding: 5px 0 5px 5px;\n  // background: gainsboro;\n  border-bottom: 1px solid gainsboro;\n`;\n\nconst ReadingListTitle = styled.h3``;\n\nconst ReadingListEmptyMsg = styled.p`\n  font-style: italic;\n  color: #dafaff;\n`;\n\nconst ReadingListContainer = styled.section``;\n\nexport default ({ readings }) => {\n  return (\n    <ReadingListContainer>\n      <ReadingListTitle>{\"Reading list: \"}</ReadingListTitle>\n      {readings.length === 0 && (\n        <ReadingListEmptyMsg>\n          Your reading list is empty. Swipe right till you reach the search\n          view. Search for an author or a paper title and start adding papers to\n          your reading list and following researchers.\n          <br/><br/>Promise I will put a shortcut button here soon.\n        </ReadingListEmptyMsg>\n      )}\n      <ReadingList>\n        {readings.map(paper => (\n          <ReadingListEntry key={paper.guid}>{paper.title}</ReadingListEntry>\n        ))}\n      </ReadingList>\n    </ReadingListContainer>\n  );\n};\n","import React from \"react\";\nimport Readings from \"./Readings\";\nimport { store } from \"../App\";\n\nclass ReadingsContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { readings: [] };\n    store.subscribe(() =>\n      this.setState({ readings: store.getState().readings })\n    );\n  }\n\n  componentDidMount() {\n    this.setState({ readings: store.getState().readings });\n  }\n\n  render() {\n    return <Readings readings={this.state.readings} />;\n  }\n}\n\nexport default ReadingsContainer;\n","import { rLog } from \"../utils\";\nimport papers from \"../papers\";\n// import actions from \"./actions\";\n//\n\nconst ADD_PAPER = papers.actions.ADD_PAPER;\n\nfunction readings(state = [], action) {\n  rLog(\"readings\", state, action);\n  switch (action.type) {\n    case ADD_PAPER:\n      // TODO: check if paper already exists!\n      if (state.some(paper => paper.guid === action.paper.guid)) {\n        return state;\n      }\n      return state.concat(action.paper);\n    default:\n      return state;\n  }\n}\n\nexport default readings;\n","import Readings from \"./Readings\";\nimport ReadingsContainer from \"./container\";\nimport * as actions from \"./actions\";\nimport reducer from \"./reducer\";\n\nconst NAME = \"readings\";\nconst components = { Readings, ReadingsContainer };\n\nexport default { NAME, actions, reducer, components };\n","import { fetchAtomFeed } from \"../data/query\";\n//\n\nexport const RECEIVE_PAPERS = \"RECEIVE_PAPERS\";\nexport const REQUEST_PAPERS = \"REQUEST_PAPERS\";\n\n// sync action creators that will work with async action creators\n\nexport function requestPapers(arxivQuery, followedAuthors) {\n  return {\n    type: REQUEST_PAPERS,\n    arxivQuery,\n    followedAuthors\n  };\n}\n\nexport function receivePapers(arxivQuery, followedAuthors, atomFeed) {\n  return {\n    type: RECEIVE_PAPERS,\n    arxivQuery,\n    followedAuthors,\n    atomFeed: atomFeed\n  };\n}\n\n// A thunk action creator, I guess?\n\nexport function fetchPapers(arxivQuery, followedAuthors) {\n  return function(dispatch) {\n    // update app state with the request status\n    dispatch(requestPapers(arxivQuery, followedAuthors));\n\n    return fetchAtomFeed(arxivQuery)\n      .then(\n        response => response,\n        error => console.log(\"Oh shit, \", error)\n      )\n      .then(response =>\n        dispatch(receivePapers(arxivQuery, followedAuthors, response))\n      );\n  };\n}\n","import { Input, Label } from \"@rebass/forms\";\n\nimport React from \"react\";\nimport { fetchPapers } from \"./actions\";\nimport papers from \"../papers\";\nimport { store } from \"../App\";\n\n//\n\nconst Papers = papers.components.Papers;\n\nfunction getQueryByTerm(term) {\n  return (\n    \"http://export.arxiv.org/api/query?search_query=\" +\n    \"%28cat:cs.AI+OR+cs.CV+OR+cs.LG+OR+cs.NE+OR+stat.ML%29+AND+\" +\n    `%28all:${term}%29&start=0&max_results=15&sortBy=submittedDate`\n  );\n}\n\nclass SearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"Pascanu\" };\n  }\n\n  _onChange = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  _handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      console.log(\"Enter was pressed: \", e.target.value);\n      const query = getQueryByTerm(e.target.value);\n      store.dispatch(fetchPapers(query, store.getState().followees));\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Label htmlFor=\"searchPaper\">\n          Search paper by author or title:\n          <br />\n          <br />\n        </Label>\n        <Input\n          onChange={this._onChange}\n          onKeyDown={this._handleKeyDown}\n          id=\"searchPaper\"\n          name=\"searchPaper\"\n          type=\"search\"\n          value={this.state.value}\n          placeholder={this.state.value}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ({ results }) => {\n  return (\n    <section>\n      <SearchInput />\n      <Papers papers={results} />\n    </section>\n  );\n};\n","import React from \"react\";\nimport Search from \"./Search\";\nimport { receivePapers } from \"./actions\";\nimport { store } from \"../App.js\";\n//\n\nclass SearchContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: { isFetching: false, items: [], atomFeed: [] },\n      followees: []\n    };\n    store.subscribe(() => {\n      const { searchResults, followees } = store.getState();\n      this.setState({ searchResults, followees });\n    });\n  }\n\n  componentDidMount() {\n    const state = store.getState();\n    this.setState({\n      searchResults: state.searchResults,\n      followees: state.followees\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.props.updateHeight();\n\n    // we are trying to save another query\n    // use the previous atomFeed to do another receivePapers action\n    // in which we process it and check for followers\n    if (prevState.followees.length !== this.state.followees.length) {\n      store.dispatch(\n        receivePapers(\n          this.state.searchResults.arxivQuery,\n          this.state.followees,\n          this.state.searchResults.atomFeed\n        )\n      );\n    }\n  }\n\n  render() {\n    return <Search results={this.state.searchResults} />;\n  }\n}\n\nexport default SearchContainer;\n","import * as actions from \"./actions\";\n\nimport { processAtomFeed, rLog } from \"../utils\";\n\n/*\n * Define some sync reducers that work with async action creators\n * TODO: there is a lot of duplication with the `feed` component.\n */\nfunction searchResults_(state = { isFetching: false, items: [] }, action) {\n  rLog(\"papers_\", state, action);\n  switch (action.type) {\n    case actions.REQUEST_PAPERS:\n      return Object.assign({}, state, {\n        arxivQuery: action.arxivQuery,\n        isFetching: true\n      });\n    case actions.RECEIVE_PAPERS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        arxivQuery: action.arxivQuery,\n        items: processAtomFeed(action.atomFeed, action.followedAuthors),\n        atomFeed: action.atomFeed,\n        lastUpdated: action.receivedAt\n      });\n    default:\n      return state;\n  }\n}\n\nfunction searchResults(state = {}, action) {\n  rLog(\"papers\", state, action);\n  switch (action.type) {\n    case actions.REQUEST_PAPERS:\n    case actions.RECEIVE_PAPERS:\n      return Object.assign({}, state, searchResults_(state, action));\n    default:\n      return state;\n  }\n}\n\nexport default searchResults;\n","import * as actions from \"./actions\";\n\nimport Search from \"./Search\";\nimport SearchContainer from \"./container\";\nimport reducer from \"./reducer\";\n\nconst components = { Search, SearchContainer };\nconst NAME = \"search\";\n\nexport default { NAME, actions, reducer, components };\n","//@ts-check\nimport \"./App.css\";\n\nimport { getLocalStorage, rLog, setLocalStorage } from \"./utils\";\n\nimport React from \"react\";\nimport Store from \"./data/store\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport authors from \"./authors\";\nimport feed from \"./feed\";\nimport followees from \"./followees\";\nimport readings from \"./readings\";\nimport search from \"./search\";\nimport theme from \"@rebass/preset\";\n\n//\n\nconst stateSchema = {\n  readings: [],\n  followees: [],\n  feed: {\n    isFetching: false,\n    items: [],\n    atomFeed: [],\n    lastUpdated: Date.now(),\n    arxivQuery: null\n  },\n  searchResults: {\n    isFetching: false,\n    items: [],\n    atomFeed: [],\n    arxivQuery: null\n  },\n  papersPerAuthor: 5\n};\n\nconst initState = Object.assign({}, stateSchema, getLocalStorage(\"state\"));\n\n/*\n * Define the root reducer\n */\n\nfunction readFiveApp(state = initState, action) {\n  rLog(\"ROOT\", state, action);\n  return {\n    followees: authors.reducer(state.followees, action), // using this for now\n    readings: readings.reducer(state.readings, action),\n    feed: feed.reducer(state.feed, action),\n    searchResults: search.reducer(state.searchResults, action)\n  };\n}\n\n/*\n * Configure the store\n */\nconst store = new Store(readFiveApp, initState);\n// Subscribe a logger\nstore.subscribe(() => console.log(\"DISPATCHED: \", store.getState()));\n// Subscribe the localStorage (to a limitted number of properties)\nstore.subscribe(() => {\n  const { readings, followees } = store.getState();\n  setLocalStorage(\"state\", { readings, followees });\n});\n\n/*\n * Continue with the React application.\n */\n\nconst { ReadingsContainer } = readings.components;\nconst { FolloweesContainer } = followees.components;\nconst { FeedContainer } = feed.components;\nconst { SearchContainer } = search.components;\n\nclass App extends React.Component {\n  render() {\n    // styles for the SwipeableViews\n    const swSty = {\n      slide: {\n        padding: 15,\n        minHeight: \"calc(100vh - 68px)\",\n        color: \"#fff\",\n        WebkitOverflowScrolling: \"touch\"\n      },\n      slide1: {\n        background: \"#00b2cb\",\n        borderRight: \"30px solid #B3DC4A\"\n        // background: \"#fea900\"\n      },\n      slide2: {\n        background: \"#b3dc4a\",\n        borderRight: \"30px solid #4B3F72\"\n      },\n      slide3: {\n        background: \"#4B3F72\",\n        borderRight: \"30px solid #FEA900\"\n      },\n      slide4: {\n        backgroundColor: \"#FEA900\"\n      }\n    };\n\n    return (\n      <ThemeProvider theme={theme}>\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">\n            ReadFive.\n            {/* <span className=\"App-punchline\">\n              Daily feed with the last five papers by the authors you follow\n            </span> */}\n          </h1>\n        </header>\n\n        <SwipeableViews\n          disableLazyLoading={true}\n          enableMouseEvents={true}\n          animateHeight={true}\n          action={actions => {\n            this.swipeableActions = actions;\n          }}\n          style={{ overflowY: \"hidden\" }}\n        >\n          <div style={Object.assign({}, swSty.slide, swSty.slide1)}>\n            <ReadingsContainer />\n          </div>\n          <div style={Object.assign({}, swSty.slide, swSty.slide2)}>\n            <FolloweesContainer />\n          </div>\n          <div style={Object.assign({}, swSty.slide, swSty.slide3)}>\n            <FeedContainer />\n          </div>\n          <div style={Object.assign({}, swSty.slide, swSty.slide4)}>\n            <SearchContainer\n              updateHeight={() => this.swipeableActions.updateHeight()}\n            />\n          </div>\n        </SwipeableViews>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport { App as default, store };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Normalize} from 'styled-normalize'\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst Root = () => (\n  <React.Fragment>\n    <Normalize />\n    <App />\n  </React.Fragment>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}